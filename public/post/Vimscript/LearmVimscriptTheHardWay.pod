=encoding utf8

=pod

=head1 Preface

프로그래머는 생각을 텍스트로 나타낸다.

vim 은 이를 위한 매우 강력한 도구지만, 사용자의 습관을 녹여내지 못하면 그 빛을 발하지 못한다.
이 글에서는 vim 을 사용자에 맞게 커스터마이징하기 위한 언어인, vimscript 에 대해 다룬다.

다른 언어 책과는 달리 여기에서는 체험을 먼저 제공하고 설명이 뒤따를 것이다.
B<모든 내용을 직접 타이핑해보고 각각이 어떤 일을 하는지 이해하기 바란다.>
이는 필요한 기능을 언제라도 떠올리기 위해 필수적인 과정이다.

=head1 Prerequisites

이 글이 쓰여질 당시의 vim 버전은 7.3 이다. vim 은 이전 버전과 항상 호환되므로 7.3 이상의 버전이 준비되어 있어야 한다.

vim 에 익숙하고, B<buffer>, B<window>, B<normal mode>, B<insert mode>, B<text object> 에 대한 기본 지식이 있어야 한다.

=head2 Creating a vimrc File

=head1 Echoing Messages

=head2 Persistent Echoing

=begin html

<pre><code class='vim hljs'>
:echo "Hello, world"
</code></pre>

=end html


=begin html

<pre><code class='vim hljs'>
:echom "Hello, again world"
</code></pre>

=end html

이 둘은 하단에 'Hello, world', 'Hello, again world' 를 출력하게 된다.

그렇다면 어떤 차이가 있을까?

=begin html

<pre><code class='vim hljs'>
:messages
</code></pre>

=end html

를 쳐보면 I<echom> 에 의한 'Hello, again world' 를 확인할 수 있다.


=cut

